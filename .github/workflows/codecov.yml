name: Code coverage

on:
  pull_request:
    paths:
      - '**.rs'
      - '**.py'
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '**.py'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: py-polars
    shell: bash

jobs:
  coverage:
    name: Code Coverage
    runs-on: macos-latest
    env:
      RUSTFLAGS: '-C instrument-coverage'
      RUST_BACKTRACE: 1
      LLVM_PROFILE_FILE: '/Users/runner/work/polars/polars/target/polars-%p-%3m.profraw'
      CARGO_LLVM_COV: 1
      CARGO_LLVM_COV_SHOW_ENV: 1
      CARGO_LLVM_COV_TARGET_DIR: '/Users/runner/work/polars/polars/target'
      CARGO_PROFILE_TEST_BUILD_OVERRIDE_DEBUG: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # HACK: zlib-ng fails to compile (possibly threading issue), for now use the slower rust backend
      - name: Replace zlib-ng with slower backend
        shell: bash
        run: |
          find .. -type f -name 'Cargo.toml' -exec sed -i '' 's/zlib-ng/rust_backend/g' {} +

      - name: Create virtual environment
        run: |
          python -m venv .venv
          echo "$GITHUB_WORKSPACE/py-polars/.venv/bin" >> $GITHUB_PATH

      - name: Set up Rust
        run: rustup component add llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Prepare coverage
        run: cargo llvm-cov clean --workspace

      - name: Run tests
        run: >
          cargo test --all-features
          -p polars-arrow
          -p polars-core
          -p polars-io
          -p polars-lazy
          -p polars-ops
          -p polars-plan
          -p polars-row
          -p polars-sql
          -p polars-time
          -p polars-utils

      - name: Run Rust integration tests
        run: cargo test --all-features -p polars --test it

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      - name: Install Polars
        run: maturin develop

      - name: Run Python tests
        run: pytest --cov -n auto --dist loadgroup -m "not benchmark and not docs" --cov-report xml:main.xml
        continue-on-error: true

      - name: Run Python tests - async reader
        env:
          POLARS_FORCE_ASYNC: 1
        run: pytest --cov -m "not benchmark and not docs" tests/unit/io/ --cov-report xml:async.xml
        continue-on-error: true

      - name: Report coverage
        run: cargo llvm-cov report --lcov --output-path coverage.lcov

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: |
            py-polars/coverage.lcov
            py-polars/main.xml
            py-polars/async.xml

      - name: Upload coverage information
        uses: codecov/codecov-action@v4
        with:
          files: py-polars/coverage.lcov,py-polars/main.xml,py-polars/async.xml
          name: macos
          token: ${{ secrets.CODECOV_TOKEN }}